apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ .Values.database.name }}-job
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Values.database.name }}-job
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app: {{ .Values.database.name }}-job
    # annotations:
    #    "sidecar.istio.io/inject": "false"
    spec:
      {{ if .Values.imagePullSecrets.name }}
      imagePullSecrets:
        -  name:  {{ .Values.imagePullSecrets.name }}
      {{ end }}
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: {{ .Values.database.job.image }}
        # command: ["sh", "-c", "sleep 60s ; psql -h {{ .Values.database.name }} -U {{ .Values.database.secret.username }} -d highlight -p {{ .Values.database.container.port }} -a -f /post-scripts/data_insert.sql"]
        # command: ["sh", "-c", "sleep 3600s"]
        # command: ["sh", "-c", "sleep 60s ; cat /pg-restore/pg_restore.sql | psql -h {{ .Values.database.name }} -U {{ .Values.database.secret.username }} -p {{ .Values.database.container.port }} -d highlight "]
        command: ["sh", "-c", "sleep 60s ; . /scripts/cast-init.sh"]
        env:
          - name: HL_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: {{ .Values.database.name }}-secret
        volumeMounts:
        - name: {{ .Values.database.name }}-init-script
          mountPath: "/scripts"
      volumes:
      - name: {{ .Values.database.name }}-init-script
        configMap:
          name: {{ .Values.database.name }}-init-script
