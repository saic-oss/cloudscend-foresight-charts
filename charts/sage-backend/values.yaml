# Default values for Sage-Backend.
# This is a YAML-formatted file.

name: sage-api
namespace: sage
replicas: 1
imagePullSecrets:
  name:
spec:
  containers:
    imagePullPolicy: Always
    image: sage-backend
    ports:
      containerPort: 8080
  volumes:
    name: sage-api-persistent-storage
    persistentVolumeClaim: sage-api-pv-claim
    persistentVolumeClaimStorage: 20Gi
    storageClass: ""
keycloak:
  allowed_origins: ""
  auth_server_url: ""
  realm: appmod
env:
  database_username: ""
  database_url: ""
  database_name: sage
  advisor_analysis_url: ""
  advisor_reports_url: ""
  common_data_url: ""
  highlight_analysis_url: ""
  highlight_report_url: ""
  sage_report_url: ""
  queue_analysis_url: ""
  aws_bucket_name: sample
  aws_s3_enabled: true
  cast_highlight_url: ""
  metabase_site_url: ""
  metabase_dashboard_number: ""
  sage_machinelearning_url: ""
  sage_machinelearning_client_name: ""
secret:
  username: ""
  password: ""
  keycloakadminuser: ""
  keycloakadminpassword: ""
  metabasesecretkey: ""
  highlighttokenusername: ""
  highlighttokenpassword: ""
  sage_machinelearning_client_password: ""
  postgres_password: ""
cloud_aws:
  stack:
    auto: ""
  region:
    auto: ""
    static: ""
  credentials:
    instanceProfile: ""
    accessKey: ""
    secretKey: ""

ingress:
  enabled: true
  hosts:
    - sample.com
  # The ingress path. Useful to host metabase on a subpath, such as `/metabase`.
  path: /
  labels:
    # Used to add custom labels to the Ingress
    # Useful if for example you have multiple Ingress controllers and want your Ingress controllers to bind to specific Ingresses
    # traffic: internal
  annotations: {}
    #kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
  tls:
    - secretName: tls-sample.com
      hosts:
        - sample.com

istio:
  hosts: ""
  gateways: istio-ingress/istio-autogenerated-k8s-ingress
  port: 8080
  enabled: true

##### POSTGRES Configuration
postgresql:
  enabled: false
  annotations:
    app: sage-database
  image:
    pullSecrets: ""
    pullPolicy: "IfNotPresent"
  persistence:
    mountPath: /var/lib/postgresql/data
    subPath: sagedb
    size: 20Gi
    storageClass: aws-efs
  # PostgreSQL User to create
  postgresqlUsername: sage-db
  # PostgreSQL Password for the new user
  postgresqlPassword: ""
  # PostgreSQL Database to create
  postgresqlDatabase: sage-db
  # Persistent Volume Storage configuration
